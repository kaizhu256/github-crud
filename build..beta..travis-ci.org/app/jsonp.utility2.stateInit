window.utility2.stateInit({"utility2":{"assetsDict":{"/assets.example.html":"","/assets.example.js":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nexample.js\n\nthis script will run a web-demo of github-crud\n\ninstruction\n    1. save this script as example.js\n    2. edit env vars below\n    3. run the shell command:\n        $ npm install github-crud && node example.js\n    4. edit this script to suit your needs\n*/\n\n\n\n/* istanbul instrument in package github_crud */\n/* jslint utility2:true */\n(function () {\n\"use strict\";\n\n\n\n/*\n * edit begin\n * edit env vars below\n */\nprocess.env.BRANCH = \"gh-pages\";\nprocess.env.GITHUB_REPO = \"kaizhu256/node-github-crud\";\n// get $GITHUB_TOKEN from https://github.com/settings/tokens\nprocess.env.GITHUB_TOKEN = process.env.GITHUB_TOKEN || \"xxxxxxxx\";\n/*\n * edit end\n */\n\n\n\nvar local;\nvar modeNext;\nvar onNext;\nmodeNext = 0;\n/* istanbul ignore next */\nonNext = function (error, data) {\n    if (error) {\n        console.error(error);\n    }\n    modeNext += 1;\n    switch (modeNext) {\n    // init\n    case 1:\n        if (\n            typeof window === \"object\"\n            || global.utility2_rollup // jslint ignore:line\n        ) {\n            return;\n        }\n        local = globalThis.utility2_moduleExports;\n        module.exports = local;\n        if (\n            process.env.npm_config_mode_auto_restart\n            || process.env.npm_config_mode_test\n        ) {\n            return;\n        }\n        onNext();\n        break;\n    // test github-crud put\n    case 2:\n        console.error(\"\\n\\n\\ngithub-crud put /foo/bar/hello.txt\\n\");\n        local.githubCrudContentPut({\n            content: \"hello world\\n\",\n            message: \"commit message 1\",\n            url: \"https://github.com/\" + process.env.GITHUB_REPO + \"/blob/\"\n            + process.env.BRANCH + \"/foo/bar/hello.txt\"\n        }, onNext);\n        break;\n    // test github-crud get\n    case 3:\n        console.error(\"\\n\\n\\ngithub-crud get /foo/bar/hello.txt\\n\");\n        local.githubCrudContentGet({\n            url: \"https://github.com/\" + process.env.GITHUB_REPO + \"/blob/\"\n            + process.env.BRANCH + \"/foo/bar/hello.txt\"\n        }, onNext);\n        break;\n    // test github-crud touch\n    case 4:\n        console.error(String(data));\n        console.error(\"\\n\\n\\ngithub-crud touch /foo/bar/hello.txt\\n\");\n        local.githubCrudContentTouch({\n            message: \"commit message 2\",\n            url: \"https://github.com/\" + process.env.GITHUB_REPO + \"/blob/\"\n            + process.env.BRANCH + \"/foo/bar/hello.txt\"\n        }, onNext);\n        break;\n    // test github-crud delete\n    case 5:\n        console.error(\"\\n\\n\\ngithub-crud delete /foo/bar/hello.txt\\n\");\n        local.githubCrudContentDelete({\n            message: \"commit message 3\",\n            url: \"https://github.com/\" + process.env.GITHUB_REPO + \"/blob/\"\n            + process.env.BRANCH + \"/foo/bar/hello.txt\"\n        }, onNext);\n        break;\n    }\n};\nonNext();\n}());","/assets.swgg.swagger.json":"","/assets.test.js":"/* istanbul instrument in package github_crud */\n/* istanbul ignore next */\n/* jslint utility2:true */\n(function (globalThis) {\n    \"use strict\";\n    var consoleError;\n    var local;\n    // init globalThis\n    (function () {\n        try {\n            globalThis = Function(\"return this\")(); // jslint ignore:line\n        } catch (ignore) {}\n    }());\n    globalThis.globalThis = globalThis;\n    // init debug_inline\n    if (!globalThis[\"debug\\u0049nline\"]) {\n        consoleError = console.error;\n        globalThis[\"debug\\u0049nline\"] = function () {\n        /*\n         * this function will both print <arguments> to stderr\n         * and return <arguments>[0]\n         */\n            var argList;\n            argList = Array.from(arguments); // jslint ignore:line\n            // debug arguments\n            globalThis[\"debug\\u0049nlineArguments\"] = argList;\n            consoleError(\"\\n\\ndebug\\u0049nline\");\n            consoleError.apply(console, argList);\n            consoleError(\"\\n\");\n            // return arg0 for inspection\n            return argList[0];\n        };\n    }\n    // init local\n    local = {};\n    local.local = local;\n    globalThis.globalLocal = local;\n    // init isBrowser\n    local.isBrowser = (\n        typeof window === \"object\"\n        && window === globalThis\n        && typeof window.XMLHttpRequest === \"function\"\n        && window.document\n        && typeof window.document.querySelector === \"function\"\n    );\n    // init function\n    local.assertThrow = function (passed, message) {\n    /*\n     * this function will throw error <message> if <passed> is falsy\n     */\n        var error;\n        if (passed) {\n            return;\n        }\n        error = (\n            // ternary-condition\n            (\n                message\n                && typeof message.message === \"string\"\n                && typeof message.stack === \"string\"\n            )\n            // if message is an error-object, then leave it as is\n            ? message\n            : new Error(\n                typeof message === \"string\"\n                // if message is a string, then leave it as is\n                ? message\n                // else JSON.stringify message\n                : JSON.stringify(message, null, 4)\n            )\n        );\n        throw error;\n    };\n    local.functionOrNop = function (fnc) {\n    /*\n     * this function will if <fnc> exists,\n     * them return <fnc>,\n     * else return <nop>\n     */\n        return fnc || local.nop;\n    };\n    local.identity = function (value) {\n    /*\n     * this function will return <value>\n     */\n        return value;\n    };\n    local.nop = function () {\n    /*\n     * this function will do nothing\n     */\n        return;\n    };\n    local.objectAssignDefault = function (target, source) {\n    /*\n     * this function will if items from <target> are\n     * null, undefined, or empty-string,\n     * then overwrite them with items from <source>\n     */\n        Object.keys(source).forEach(function (key) {\n            if (\n                target[key] === null\n                || target[key] === undefined\n                || target[key] === \"\"\n            ) {\n                target[key] = target[key] || source[key];\n            }\n        });\n        return target;\n    };\n    // require builtin\n    if (!local.isBrowser) {\n        local.assert = require(\"assert\");\n        local.buffer = require(\"buffer\");\n        local.child_process = require(\"child_process\");\n        local.cluster = require(\"cluster\");\n        local.crypto = require(\"crypto\");\n        local.dgram = require(\"dgram\");\n        local.dns = require(\"dns\");\n        local.domain = require(\"domain\");\n        local.events = require(\"events\");\n        local.fs = require(\"fs\");\n        local.http = require(\"http\");\n        local.https = require(\"https\");\n        local.net = require(\"net\");\n        local.os = require(\"os\");\n        local.path = require(\"path\");\n        local.querystring = require(\"querystring\");\n        local.readline = require(\"readline\");\n        local.repl = require(\"repl\");\n        local.stream = require(\"stream\");\n        local.string_decoder = require(\"string_decoder\");\n        local.timers = require(\"timers\");\n        local.tls = require(\"tls\");\n        local.tty = require(\"tty\");\n        local.url = require(\"url\");\n        local.util = require(\"util\");\n        local.vm = require(\"vm\");\n        local.zlib = require(\"zlib\");\n    }\n}(this));\n\n\n\n(function (local) {\n\"use strict\";\n\n\n\n// run shared js-env code - init-before\n(function () {\n// init local\nlocal = (globalThis.utility2 || require(\"utility2\")).requireReadme();\nglobalThis.local = local;\n// init test\nlocal.testRunDefault(local);\n}());\n\n\n\n// run shared js-env code - function\n(function () {\nlocal.testCase_githubCrudContentDelete_tree = function (options, onError) {\n/*\n * this function will test githubCrudContentDelete's tree handling-behavior\n */\n    var httpRequest;\n    if (local.isBrowser) {\n        onError(null, options);\n        return;\n    }\n    httpRequest = function (urlParsed, onResponse) {\n        onResponse(httpRequest, urlParsed);\n        return httpRequest;\n    };\n    httpRequest.end = local.nop;\n    httpRequest.ii = -1;\n    httpRequest.on = function (type, onError) {\n        httpRequest.ii += 1;\n        switch (type) {\n        case \"data\":\n            onError(Buffer.from(\n                httpRequest.ii\n                ? \"{\\\"sha\\\":\\\"aa\\\"}\"\n                : (\n                    \"[{\\\"url\\\":\\\"https://github.com\"\n                    + \"/:owner/:repo/blob/:branch/:path\\\"}]\"\n                )\n            ));\n            break;\n        case \"end\":\n            onError();\n            break;\n        }\n        return httpRequest;\n    };\n    local.githubCrudContentDelete({\n        httpRequest: httpRequest,\n        url: \"https://github.com/:owner/:repo/blob/:branch/:path\"\n    }, onError);\n};\n\nlocal.testCase_githubCrudContentXxx_default = function (options, onError) {\n/*\n * this function will test githubCrudContentXxx's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, options);\n        return;\n    }\n    local.onParallelList({\n        list: [\n            \"githubCrudAjax\",\n            \"githubCrudContentDelete\",\n            \"githubCrudContentGet\",\n            \"githubCrudContentPut\",\n            \"githubCrudContentPutFile\",\n            \"githubCrudContentTouch\",\n            \"githubCrudContentTouchList\"\n        ]\n    }, function (options2, onParallel) {\n        var httpRequest;\n        httpRequest = function (urlParsed, onResponse) {\n            setTimeout(onResponse, 0, httpRequest, urlParsed);\n            return httpRequest;\n        };\n        httpRequest.end = local.nop;\n        httpRequest.on = function (type, onError) {\n            switch (type) {\n            case \"data\":\n                onError(Buffer.from(\"{\\\"sha\\\":\\\"aa\\\"}\"));\n                break;\n            case \"end\":\n                setTimeout(onError);\n                break;\n            }\n            return httpRequest;\n        };\n        onParallel.counter += 1;\n        local[options2.element]({\n            content: \"aa\",\n            file: \"https://github.com/:owner/:repo/blob/:branch/:path\",\n            httpRequest: httpRequest,\n            url: \"https://github.com/:owner/:repo/blob/:branch/:path\",\n            urlList: [\"https://github.com/:owner/:repo/blob/:branch/:path\"]\n        }, function (error) {\n            // validate no error occurred\n            local.assertThrow(!error, error);\n            onParallel(null, options);\n        });\n    }, onError);\n};\n\nlocal.testCase_githubCrudContentXxx_error = function (options, onError) {\n/*\n * this function will test githubCrudContentXxx's error handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, options);\n        return;\n    }\n    local.onParallelList({\n        list: [\n            \"githubCrudAjax\",\n            \"githubCrudContentGet\",\n            \"githubCrudContentPut\",\n            \"githubCrudContentPutFile\",\n            \"githubCrudContentTouch\",\n            \"githubCrudContentTouchList\"\n        ]\n    }, function (options2, onParallel) {\n        var httpRequest;\n        httpRequest = function (urlParsed, onResponse) {\n            setTimeout(onResponse, 0, httpRequest, urlParsed);\n            return httpRequest;\n        };\n        httpRequest.end = local.nop;\n        httpRequest.on = function (type, onError) {\n            switch (type) {\n            case \"data\":\n                onError(Buffer.from(\"{}\"));\n                break;\n            case \"end\":\n                setTimeout(onError);\n                break;\n            case \"error\":\n                setTimeout(onError, null, local.errorDefault);\n                break;\n            }\n            return httpRequest;\n        };\n        onParallel.counter += 1;\n        local[options2.element]({\n            file: \"package.json\",\n            httpRequest: httpRequest,\n            url: \"https://github.com/:owner/:repo/blob/:branch/:path/\",\n            urlList: [\"error\"]\n        }, function (error) {\n            // validate error occurred\n            local.assertThrow(error, options2);\n            onParallel(null, options);\n        });\n    }, onError);\n};\n\nlocal.testCase_githubCrudRepoXxxList_default = function (options, onError) {\n/*\n * this function will test githubCrudRepoXxxList's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, options);\n        return;\n    }\n    options = {};\n    options.statusCode = 404;\n    local.onParallelList({\n        list: [\n            \"githubCrudRepoCreateList\",\n            \"githubCrudRepoDeleteList\"\n        ]\n    }, function (options2, onParallel) {\n        var httpRequest;\n        onParallel.counter += 1;\n        httpRequest = function (urlParsed, onResponse) {\n            var requestObj;\n            requestObj = {};\n            requestObj.statusCode = options.statusCode;\n            options.statusCode = 0;\n            requestObj.end = local.nop;\n            requestObj.on = function (type, onError) {\n                switch (type) {\n                case \"end\":\n                    setTimeout(onError);\n                    break;\n                }\n                return requestObj;\n            };\n            setTimeout(onResponse, 0, requestObj, urlParsed);\n            return requestObj;\n        };\n        local[options2.element]({\n            httpRequest: httpRequest,\n            urlList: [\"aa/bb\"]\n        }, function (error) {\n            // validate no error occurred\n            local.assertThrow(!error, error);\n            onParallel(null, options);\n        });\n    }, onError);\n};\n\nlocal.testCase_githubCrudRepoXxx_error = function (options, onError) {\n/*\n * this function will test githubCrudRepoXxx's error handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, options);\n        return;\n    }\n    local.onParallelList({\n        list: [\n            \"githubCrudRepoCreateList\",\n            \"githubCrudRepoDeleteList\"\n        ]\n    }, function (options2, onParallel) {\n        onParallel.counter += 1;\n        local[options2.element]({\n            urlList: [\"undefined\"]\n        }, function (error) {\n            // validate error occurred\n            local.assertThrow(error, error);\n            onParallel(null, options);\n        });\n    }, onError);\n};\n}());\n\n\n\n}());\n","/assets.utility2.base.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<!-- \"assets.utility2.template.html\" -->\n<title>github-crud (2019.1.21)</title>\n<style>\n/* jslint utility2:true */\n/*csslint\n*/\n/* csslint ignore:start */\n*,\n*:after,\n*:before {\n    box-sizing: border-box;\n}\n/* csslint ignore:end */\n@keyframes uiAnimateShake {\n    0%, 50% {\n        transform: translateX(10px);\n    }\n    25%, 75% {\n        transform: translateX(-10px);\n    }\n    100% {\n        transform: translateX(0);\n    }\n}\n@keyframes uiAnimateSpin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\na {\n    overflow-wrap: break-word;\n}\nbody {\n    background: #eef;\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0 40px;\n}\nbody > div,\nbody > form > div,\nbody > form > input,\nbody > form > pre,\nbody > form > textarea,\nbody > form > .button,\nbody > input,\nbody > pre,\nbody > textarea,\nbody > .button {\n    margin-bottom: 20px;\n}\nbody > form > input,\nbody > form > .button,\nbody > input,\nbody > .button {\n    width: 20rem;\n}\nbody > form > textarea,\nbody > textarea {\n    height: 10rem;\n    width: 100%;\n}\nbody > textarea[readonly] {\n    background: #ddd;\n}\ncode,\npre,\ntextarea {\n    font-family: Consolas, Menlo, monospace;\n    font-size: small;\n}\npre {\n    overflow-wrap: break-word;\n    white-space: pre-wrap;\n}\ntextarea {\n    overflow: auto;\n    white-space: pre;\n}\n.button {\n    background-color: #fff;\n    border: 1px solid;\n    border-bottom-color: rgb(186, 186, 186);\n    border-left-color: rgb(209, 209, 209);\n    border-radius: 4px;\n    border-right-color: rgb(209, 209, 209);\n    border-top-color: rgb(216, 216, 216);\n    color: #00d;\n    cursor: pointer;\n    display: inline-block;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: normal;\n    margin: 0;\n    padding: 2px 7px 3px 7px;\n    text-align: center;\n    text-decoration: underline;\n}\n.colorError {\n    color: #d00;\n}\n.uiAnimateShake {\n    animation-duration: 500ms;\n    animation-name: uiAnimateShake;\n}\n.uiAnimateSlide {\n    overflow-y: hidden;\n    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\n}\n.utility2FooterDiv {\n    text-align: center;\n}\n.zeroPixel {\n    border: 0;\n    height: 0;\n    margin: 0;\n    padding: 0;\n    width: 0;\n}\n</style>\n</head>\n<body>\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 500ms, width 1500ms; width: 0%; z-index: 1;\"></div>\n<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\n<a class=\"zeroPixel\" download=\"db.persistence.json\" href=\"\" id=\"dbExportA1\"></a>\n<input class=\"zeroPixel\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbImportInput\" type=\"file\">\n<script>\n/* jslint utility2:true */\n// init domOnEventWindowOnloadTimeElapsed\n(function () {\n/*\n * this function will measure and print time-elapsed for window.onload\n */\n    \"use strict\";\n    if (window.domOnEventWindowOnloadTimeElapsed) {\n        return;\n    }\n    window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\n    window.addEventListener(\"load\", function () {\n        setTimeout(function () {\n            window.domOnEventWindowOnloadTimeElapsed = (\n                Date.now()\n                - window.domOnEventWindowOnloadTimeElapsed\n            );\n            console.error(\n                \"domOnEventWindowOnloadTimeElapsed = \"\n                + window.domOnEventWindowOnloadTimeElapsed\n            );\n        }, 100);\n    });\n}());\n\n\n\n// init domOnEventDelegateDict\n(function () {\n/*\n * this function will handle delegated dom-event\n * example usage:\n */\n    \"use strict\";\n    var timerTimeoutDict;\n    if (window.domOnEventDelegateDict) {\n        return;\n    }\n    window.domOnEventDelegateDict = {};\n    timerTimeoutDict = {};\n    window.domOnEventDelegateDict.domOnEventDelegate = function (event) {\n        event.targetOnEvent = event.target.closest(\n            \"[data-onevent]\"\n        );\n        if (\n            !event.targetOnEvent\n            || event.targetOnEvent.dataset.onevent === \"domOnEventNop\"\n            || event.target.closest(\n                \".disabled, [readonly]\"\n            )\n        ) {\n            return;\n        }\n        // rate-limit high-frequency-event\n        switch (event.type) {\n        case \"keydown\":\n        case \"keyup\":\n            // filter non-input keyboard-event\n            if (!event.target.closest(\n                \"input, option, select, textarea\"\n            )) {\n                return;\n            }\n            if (timerTimeoutDict[event.type] !== true) {\n                timerTimeoutDict[event.type] = (\n                    timerTimeoutDict[event.type]\n                    || setTimeout(function () {\n                        timerTimeoutDict[event.type] = true;\n                        window.domOnEventDelegateDict.domOnEventDelegate(\n                            event\n                        );\n                    }, 50)\n                );\n                return;\n            }\n            timerTimeoutDict[event.type] = null;\n            break;\n        }\n        switch (event.targetOnEvent.tagName) {\n        case \"BUTTON\":\n        case \"FORM\":\n            event.preventDefault();\n            break;\n        }\n        // reset output\n        if (event.targetOnEvent.dataset.oneventResetOutput) {\n            Array.from(document.querySelectorAll(\n                \".onevent-reset-output\"\n            )).forEach(function (element) {\n                switch (element.tagName) {\n                case \"INPUT\":\n                case \"TEXTAREA\":\n                    element.value = \"\";\n                    break;\n                default:\n                    element.innerHTML = \"\";\n                }\n            });\n        }\n        event.stopPropagation();\n        window.domOnEventDelegateDict[event.targetOnEvent.dataset.onevent](\n            event\n        );\n    };\n    // init event-handling\n    [\n        \"change\",\n        \"click\",\n        \"keydown\",\n        \"submit\"\n    ].forEach(function (eventType) {\n        document.addEventListener(\n            eventType,\n            window.domOnEventDelegateDict.domOnEventDelegate\n        );\n    });\n}());\n\n\n\n// init timerIntervalAjaxProgressUpdate\n(function () {\n/*\n * this function will increment ajax-progress-bar\n * until webpage has loaded\n */\n    \"use strict\";\n    var ajaxProgressDiv1;\n    var ajaxProgressState;\n    var ajaxProgressUpdate;\n    if (\n        window.timerIntervalAjaxProgressUpdate\n        || !document.querySelector(\n            \"#ajaxProgressDiv1\"\n        )\n    ) {\n        return;\n    }\n    ajaxProgressDiv1 = document.querySelector(\n        \"#ajaxProgressDiv1\"\n    );\n    setTimeout(function () {\n        ajaxProgressDiv1.style.width = \"25%\";\n    });\n    ajaxProgressState = 0;\n    ajaxProgressUpdate = (\n        window.local\n        && window.local.ajaxProgressUpdate\n    ) || function () {\n        ajaxProgressDiv1.style.width = \"100%\";\n        setTimeout(function () {\n            ajaxProgressDiv1.style.background = \"transparent\";\n            setTimeout(function () {\n                ajaxProgressDiv1.style.width = \"0%\";\n            }, 500);\n        }, 1000);\n    };\n    window.timerIntervalAjaxProgressUpdate = setInterval(function () {\n        ajaxProgressState += 1;\n        ajaxProgressDiv1.style.width = Math.max(\n            100 - 75 * Math.exp(-0.125 * ajaxProgressState),\n            ajaxProgressDiv1.style.width.slice(0, -1) | 0\n        ) + \"%\";\n    }, 1000);\n    window.addEventListener(\"load\", function () {\n        clearInterval(window.timerIntervalAjaxProgressUpdate);\n        ajaxProgressUpdate();\n    });\n}());\n\n\n\n// init domOnEventSelectAllWithinPre\n(function () {\n/*\n * this function will limit select-all within <pre tabIndex=\"0\"> elements\n * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\n */\n    \"use strict\";\n    if (window.domOnEventSelectAllWithinPre) {\n        return;\n    }\n    window.domOnEventSelectAllWithinPre = function (event) {\n        var range;\n        var selection;\n        if (\n            event\n            && event.key === \"a\"\n            && (event.ctrlKey || event.metaKey)\n            && event.target.closest(\n                \"pre\"\n            )\n        ) {\n            range = document.createRange();\n            range.selectNodeContents(event.target.closest(\n                \"pre\"\n            ));\n            selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            event.preventDefault();\n        }\n    };\n    // init event-handling\n    document.addEventListener(\n        \"keydown\",\n        window.domOnEventSelectAllWithinPre\n    );\n}());\n</script>\n<h1>\n\n    <a\n        \n        href=\"https://github.com/kaizhu256/node-github-crud\"\n        \n        target=\"_blank\"\n    >\n\n        github-crud (2019.1.21)\n\n    </a>\n\n</h1>\n<h3>this zero-dependency package will provide a simple cli-tool to PUT / GET / DELETE github files</h3>\n\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\n<button class=\"button\" data-onevent=\"testRunBrowser\" data-onevent-reset-output=\"1\" id=\"testRunButton1\">run internal test</button><br>\n<div class=\"uiAnimateSlide\" id=\"testReportDiv1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\n\n\n\n\n<label>stderr and stdout</label>\n<textarea class=\"onevent-reset-output\" id=\"outputStdout1\" readonly></textarea>\n\n\n<script src=\"assets.app.js\"></script>\n\n\n<div class=\"utility2FooterDiv\">\n    [ this app was created with\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\n    ]\n</div>\n</body>\n</html>\n","/index.rollup.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<!-- \"assets.utility2.template.html\" -->\n<title>github-crud (2019.1.21)</title>\n<style>\n/* jslint utility2:true */\n/*csslint\n*/\n/* csslint ignore:start */\n*,\n*:after,\n*:before {\n    box-sizing: border-box;\n}\n/* csslint ignore:end */\n@keyframes uiAnimateShake {\n    0%, 50% {\n        transform: translateX(10px);\n    }\n    25%, 75% {\n        transform: translateX(-10px);\n    }\n    100% {\n        transform: translateX(0);\n    }\n}\n@keyframes uiAnimateSpin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\na {\n    overflow-wrap: break-word;\n}\nbody {\n    background: #eef;\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0 40px;\n}\nbody > div,\nbody > form > div,\nbody > form > input,\nbody > form > pre,\nbody > form > textarea,\nbody > form > .button,\nbody > input,\nbody > pre,\nbody > textarea,\nbody > .button {\n    margin-bottom: 20px;\n}\nbody > form > input,\nbody > form > .button,\nbody > input,\nbody > .button {\n    width: 20rem;\n}\nbody > form > textarea,\nbody > textarea {\n    height: 10rem;\n    width: 100%;\n}\nbody > textarea[readonly] {\n    background: #ddd;\n}\ncode,\npre,\ntextarea {\n    font-family: Consolas, Menlo, monospace;\n    font-size: small;\n}\npre {\n    overflow-wrap: break-word;\n    white-space: pre-wrap;\n}\ntextarea {\n    overflow: auto;\n    white-space: pre;\n}\n.button {\n    background-color: #fff;\n    border: 1px solid;\n    border-bottom-color: rgb(186, 186, 186);\n    border-left-color: rgb(209, 209, 209);\n    border-radius: 4px;\n    border-right-color: rgb(209, 209, 209);\n    border-top-color: rgb(216, 216, 216);\n    color: #00d;\n    cursor: pointer;\n    display: inline-block;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: normal;\n    margin: 0;\n    padding: 2px 7px 3px 7px;\n    text-align: center;\n    text-decoration: underline;\n}\n.colorError {\n    color: #d00;\n}\n.uiAnimateShake {\n    animation-duration: 500ms;\n    animation-name: uiAnimateShake;\n}\n.uiAnimateSlide {\n    overflow-y: hidden;\n    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\n}\n.utility2FooterDiv {\n    text-align: center;\n}\n.zeroPixel {\n    border: 0;\n    height: 0;\n    margin: 0;\n    padding: 0;\n    width: 0;\n}\n</style>\n</head>\n<body>\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 500ms, width 1500ms; width: 0%; z-index: 1;\"></div>\n<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\n<a class=\"zeroPixel\" download=\"db.persistence.json\" href=\"\" id=\"dbExportA1\"></a>\n<input class=\"zeroPixel\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbImportInput\" type=\"file\">\n<script>\n/* jslint utility2:true */\n// init domOnEventWindowOnloadTimeElapsed\n(function () {\n/*\n * this function will measure and print time-elapsed for window.onload\n */\n    \"use strict\";\n    if (window.domOnEventWindowOnloadTimeElapsed) {\n        return;\n    }\n    window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\n    window.addEventListener(\"load\", function () {\n        setTimeout(function () {\n            window.domOnEventWindowOnloadTimeElapsed = (\n                Date.now()\n                - window.domOnEventWindowOnloadTimeElapsed\n            );\n            console.error(\n                \"domOnEventWindowOnloadTimeElapsed = \"\n                + window.domOnEventWindowOnloadTimeElapsed\n            );\n        }, 100);\n    });\n}());\n\n\n\n// init domOnEventDelegateDict\n(function () {\n/*\n * this function will handle delegated dom-event\n * example usage:\n */\n    \"use strict\";\n    var timerTimeoutDict;\n    if (window.domOnEventDelegateDict) {\n        return;\n    }\n    window.domOnEventDelegateDict = {};\n    timerTimeoutDict = {};\n    window.domOnEventDelegateDict.domOnEventDelegate = function (event) {\n        event.targetOnEvent = event.target.closest(\n            \"[data-onevent]\"\n        );\n        if (\n            !event.targetOnEvent\n            || event.targetOnEvent.dataset.onevent === \"domOnEventNop\"\n            || event.target.closest(\n                \".disabled, [readonly]\"\n            )\n        ) {\n            return;\n        }\n        // rate-limit high-frequency-event\n        switch (event.type) {\n        case \"keydown\":\n        case \"keyup\":\n            // filter non-input keyboard-event\n            if (!event.target.closest(\n                \"input, option, select, textarea\"\n            )) {\n                return;\n            }\n            if (timerTimeoutDict[event.type] !== true) {\n                timerTimeoutDict[event.type] = (\n                    timerTimeoutDict[event.type]\n                    || setTimeout(function () {\n                        timerTimeoutDict[event.type] = true;\n                        window.domOnEventDelegateDict.domOnEventDelegate(\n                            event\n                        );\n                    }, 50)\n                );\n                return;\n            }\n            timerTimeoutDict[event.type] = null;\n            break;\n        }\n        switch (event.targetOnEvent.tagName) {\n        case \"BUTTON\":\n        case \"FORM\":\n            event.preventDefault();\n            break;\n        }\n        // reset output\n        if (event.targetOnEvent.dataset.oneventResetOutput) {\n            Array.from(document.querySelectorAll(\n                \".onevent-reset-output\"\n            )).forEach(function (element) {\n                switch (element.tagName) {\n                case \"INPUT\":\n                case \"TEXTAREA\":\n                    element.value = \"\";\n                    break;\n                default:\n                    element.innerHTML = \"\";\n                }\n            });\n        }\n        event.stopPropagation();\n        window.domOnEventDelegateDict[event.targetOnEvent.dataset.onevent](\n            event\n        );\n    };\n    // init event-handling\n    [\n        \"change\",\n        \"click\",\n        \"keydown\",\n        \"submit\"\n    ].forEach(function (eventType) {\n        document.addEventListener(\n            eventType,\n            window.domOnEventDelegateDict.domOnEventDelegate\n        );\n    });\n}());\n\n\n\n// init timerIntervalAjaxProgressUpdate\n(function () {\n/*\n * this function will increment ajax-progress-bar\n * until webpage has loaded\n */\n    \"use strict\";\n    var ajaxProgressDiv1;\n    var ajaxProgressState;\n    var ajaxProgressUpdate;\n    if (\n        window.timerIntervalAjaxProgressUpdate\n        || !document.querySelector(\n            \"#ajaxProgressDiv1\"\n        )\n    ) {\n        return;\n    }\n    ajaxProgressDiv1 = document.querySelector(\n        \"#ajaxProgressDiv1\"\n    );\n    setTimeout(function () {\n        ajaxProgressDiv1.style.width = \"25%\";\n    });\n    ajaxProgressState = 0;\n    ajaxProgressUpdate = (\n        window.local\n        && window.local.ajaxProgressUpdate\n    ) || function () {\n        ajaxProgressDiv1.style.width = \"100%\";\n        setTimeout(function () {\n            ajaxProgressDiv1.style.background = \"transparent\";\n            setTimeout(function () {\n                ajaxProgressDiv1.style.width = \"0%\";\n            }, 500);\n        }, 1000);\n    };\n    window.timerIntervalAjaxProgressUpdate = setInterval(function () {\n        ajaxProgressState += 1;\n        ajaxProgressDiv1.style.width = Math.max(\n            100 - 75 * Math.exp(-0.125 * ajaxProgressState),\n            ajaxProgressDiv1.style.width.slice(0, -1) | 0\n        ) + \"%\";\n    }, 1000);\n    window.addEventListener(\"load\", function () {\n        clearInterval(window.timerIntervalAjaxProgressUpdate);\n        ajaxProgressUpdate();\n    });\n}());\n\n\n\n// init domOnEventSelectAllWithinPre\n(function () {\n/*\n * this function will limit select-all within <pre tabIndex=\"0\"> elements\n * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\n */\n    \"use strict\";\n    if (window.domOnEventSelectAllWithinPre) {\n        return;\n    }\n    window.domOnEventSelectAllWithinPre = function (event) {\n        var range;\n        var selection;\n        if (\n            event\n            && event.key === \"a\"\n            && (event.ctrlKey || event.metaKey)\n            && event.target.closest(\n                \"pre\"\n            )\n        ) {\n            range = document.createRange();\n            range.selectNodeContents(event.target.closest(\n                \"pre\"\n            ));\n            selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            event.preventDefault();\n        }\n    };\n    // init event-handling\n    document.addEventListener(\n        \"keydown\",\n        window.domOnEventSelectAllWithinPre\n    );\n}());\n</script>\n<h1>\n\n    <a\n        \n        href=\"https://github.com/kaizhu256/node-github-crud\"\n        \n        target=\"_blank\"\n    >\n\n        github-crud (2019.1.21)\n\n    </a>\n\n</h1>\n<h3>this zero-dependency package will provide a simple cli-tool to PUT / GET / DELETE github files</h3>\n\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\n<button class=\"button\" data-onevent=\"testRunBrowser\" data-onevent-reset-output=\"1\" id=\"testRunButton1\">run internal test</button><br>\n<div class=\"uiAnimateSlide\" id=\"testReportDiv1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\n\n\n\n\n<label>stderr and stdout</label>\n<textarea class=\"onevent-reset-output\" id=\"outputStdout1\" readonly></textarea>\n\n\n<script src=\"assets.app.js\"></script>\n\n\n<div class=\"utility2FooterDiv\">\n    [ this app was created with\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\n    ]\n</div>\n</body>\n</html>\n","/":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<!-- \"assets.utility2.template.html\" -->\n<title>github-crud (2019.1.21)</title>\n<style>\n/* jslint utility2:true */\n/*csslint\n*/\n/* csslint ignore:start */\n*,\n*:after,\n*:before {\n    box-sizing: border-box;\n}\n/* csslint ignore:end */\n@keyframes uiAnimateShake {\n    0%, 50% {\n        transform: translateX(10px);\n    }\n    25%, 75% {\n        transform: translateX(-10px);\n    }\n    100% {\n        transform: translateX(0);\n    }\n}\n@keyframes uiAnimateSpin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\na {\n    overflow-wrap: break-word;\n}\nbody {\n    background: #eef;\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0 40px;\n}\nbody > div,\nbody > form > div,\nbody > form > input,\nbody > form > pre,\nbody > form > textarea,\nbody > form > .button,\nbody > input,\nbody > pre,\nbody > textarea,\nbody > .button {\n    margin-bottom: 20px;\n}\nbody > form > input,\nbody > form > .button,\nbody > input,\nbody > .button {\n    width: 20rem;\n}\nbody > form > textarea,\nbody > textarea {\n    height: 10rem;\n    width: 100%;\n}\nbody > textarea[readonly] {\n    background: #ddd;\n}\ncode,\npre,\ntextarea {\n    font-family: Consolas, Menlo, monospace;\n    font-size: small;\n}\npre {\n    overflow-wrap: break-word;\n    white-space: pre-wrap;\n}\ntextarea {\n    overflow: auto;\n    white-space: pre;\n}\n.button {\n    background-color: #fff;\n    border: 1px solid;\n    border-bottom-color: rgb(186, 186, 186);\n    border-left-color: rgb(209, 209, 209);\n    border-radius: 4px;\n    border-right-color: rgb(209, 209, 209);\n    border-top-color: rgb(216, 216, 216);\n    color: #00d;\n    cursor: pointer;\n    display: inline-block;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: normal;\n    margin: 0;\n    padding: 2px 7px 3px 7px;\n    text-align: center;\n    text-decoration: underline;\n}\n.colorError {\n    color: #d00;\n}\n.uiAnimateShake {\n    animation-duration: 500ms;\n    animation-name: uiAnimateShake;\n}\n.uiAnimateSlide {\n    overflow-y: hidden;\n    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\n}\n.utility2FooterDiv {\n    text-align: center;\n}\n.zeroPixel {\n    border: 0;\n    height: 0;\n    margin: 0;\n    padding: 0;\n    width: 0;\n}\n</style>\n</head>\n<body>\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 500ms, width 1500ms; width: 0%; z-index: 1;\"></div>\n<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\n<a class=\"zeroPixel\" download=\"db.persistence.json\" href=\"\" id=\"dbExportA1\"></a>\n<input class=\"zeroPixel\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbImportInput\" type=\"file\">\n<script>\n/* jslint utility2:true */\n// init domOnEventWindowOnloadTimeElapsed\n(function () {\n/*\n * this function will measure and print time-elapsed for window.onload\n */\n    \"use strict\";\n    if (window.domOnEventWindowOnloadTimeElapsed) {\n        return;\n    }\n    window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\n    window.addEventListener(\"load\", function () {\n        setTimeout(function () {\n            window.domOnEventWindowOnloadTimeElapsed = (\n                Date.now()\n                - window.domOnEventWindowOnloadTimeElapsed\n            );\n            console.error(\n                \"domOnEventWindowOnloadTimeElapsed = \"\n                + window.domOnEventWindowOnloadTimeElapsed\n            );\n        }, 100);\n    });\n}());\n\n\n\n// init domOnEventDelegateDict\n(function () {\n/*\n * this function will handle delegated dom-event\n * example usage:\n */\n    \"use strict\";\n    var timerTimeoutDict;\n    if (window.domOnEventDelegateDict) {\n        return;\n    }\n    window.domOnEventDelegateDict = {};\n    timerTimeoutDict = {};\n    window.domOnEventDelegateDict.domOnEventDelegate = function (event) {\n        event.targetOnEvent = event.target.closest(\n            \"[data-onevent]\"\n        );\n        if (\n            !event.targetOnEvent\n            || event.targetOnEvent.dataset.onevent === \"domOnEventNop\"\n            || event.target.closest(\n                \".disabled, [readonly]\"\n            )\n        ) {\n            return;\n        }\n        // rate-limit high-frequency-event\n        switch (event.type) {\n        case \"keydown\":\n        case \"keyup\":\n            // filter non-input keyboard-event\n            if (!event.target.closest(\n                \"input, option, select, textarea\"\n            )) {\n                return;\n            }\n            if (timerTimeoutDict[event.type] !== true) {\n                timerTimeoutDict[event.type] = (\n                    timerTimeoutDict[event.type]\n                    || setTimeout(function () {\n                        timerTimeoutDict[event.type] = true;\n                        window.domOnEventDelegateDict.domOnEventDelegate(\n                            event\n                        );\n                    }, 50)\n                );\n                return;\n            }\n            timerTimeoutDict[event.type] = null;\n            break;\n        }\n        switch (event.targetOnEvent.tagName) {\n        case \"BUTTON\":\n        case \"FORM\":\n            event.preventDefault();\n            break;\n        }\n        // reset output\n        if (event.targetOnEvent.dataset.oneventResetOutput) {\n            Array.from(document.querySelectorAll(\n                \".onevent-reset-output\"\n            )).forEach(function (element) {\n                switch (element.tagName) {\n                case \"INPUT\":\n                case \"TEXTAREA\":\n                    element.value = \"\";\n                    break;\n                default:\n                    element.innerHTML = \"\";\n                }\n            });\n        }\n        event.stopPropagation();\n        window.domOnEventDelegateDict[event.targetOnEvent.dataset.onevent](\n            event\n        );\n    };\n    // init event-handling\n    [\n        \"change\",\n        \"click\",\n        \"keydown\",\n        \"submit\"\n    ].forEach(function (eventType) {\n        document.addEventListener(\n            eventType,\n            window.domOnEventDelegateDict.domOnEventDelegate\n        );\n    });\n}());\n\n\n\n// init timerIntervalAjaxProgressUpdate\n(function () {\n/*\n * this function will increment ajax-progress-bar\n * until webpage has loaded\n */\n    \"use strict\";\n    var ajaxProgressDiv1;\n    var ajaxProgressState;\n    var ajaxProgressUpdate;\n    if (\n        window.timerIntervalAjaxProgressUpdate\n        || !document.querySelector(\n            \"#ajaxProgressDiv1\"\n        )\n    ) {\n        return;\n    }\n    ajaxProgressDiv1 = document.querySelector(\n        \"#ajaxProgressDiv1\"\n    );\n    setTimeout(function () {\n        ajaxProgressDiv1.style.width = \"25%\";\n    });\n    ajaxProgressState = 0;\n    ajaxProgressUpdate = (\n        window.local\n        && window.local.ajaxProgressUpdate\n    ) || function () {\n        ajaxProgressDiv1.style.width = \"100%\";\n        setTimeout(function () {\n            ajaxProgressDiv1.style.background = \"transparent\";\n            setTimeout(function () {\n                ajaxProgressDiv1.style.width = \"0%\";\n            }, 500);\n        }, 1000);\n    };\n    window.timerIntervalAjaxProgressUpdate = setInterval(function () {\n        ajaxProgressState += 1;\n        ajaxProgressDiv1.style.width = Math.max(\n            100 - 75 * Math.exp(-0.125 * ajaxProgressState),\n            ajaxProgressDiv1.style.width.slice(0, -1) | 0\n        ) + \"%\";\n    }, 1000);\n    window.addEventListener(\"load\", function () {\n        clearInterval(window.timerIntervalAjaxProgressUpdate);\n        ajaxProgressUpdate();\n    });\n}());\n\n\n\n// init domOnEventSelectAllWithinPre\n(function () {\n/*\n * this function will limit select-all within <pre tabIndex=\"0\"> elements\n * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\n */\n    \"use strict\";\n    if (window.domOnEventSelectAllWithinPre) {\n        return;\n    }\n    window.domOnEventSelectAllWithinPre = function (event) {\n        var range;\n        var selection;\n        if (\n            event\n            && event.key === \"a\"\n            && (event.ctrlKey || event.metaKey)\n            && event.target.closest(\n                \"pre\"\n            )\n        ) {\n            range = document.createRange();\n            range.selectNodeContents(event.target.closest(\n                \"pre\"\n            ));\n            selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            event.preventDefault();\n        }\n    };\n    // init event-handling\n    document.addEventListener(\n        \"keydown\",\n        window.domOnEventSelectAllWithinPre\n    );\n}());\n</script>\n<h1>\n\n    <a\n        \n        href=\"https://github.com/kaizhu256/node-github-crud\"\n        \n        target=\"_blank\"\n    >\n\n        github-crud (2019.1.21)\n\n    </a>\n\n</h1>\n<h3>this zero-dependency package will provide a simple cli-tool to PUT / GET / DELETE github files</h3>\n\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\n<button class=\"button\" data-onevent=\"testRunBrowser\" data-onevent-reset-output=\"1\" id=\"testRunButton1\">run internal test</button><br>\n<div class=\"uiAnimateSlide\" id=\"testReportDiv1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\n\n\n\n\n<label>stderr and stdout</label>\n<textarea class=\"onevent-reset-output\" id=\"outputStdout1\" readonly></textarea>\n\n\n\n<script src=\"assets.utility2.rollup.js\"></script>\n<script>window.utility2_onReadyBefore.counter += 1;</script>\n<script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\n<script src=\"assets.{{packageJson.nameLib}}.js\"></script>\n<script src=\"assets.example.js\"></script>\n<script src=\"assets.test.js\"></script>\n<script>window.utility2_onReadyBefore();</script>\n\n\n\n<div class=\"utility2FooterDiv\">\n    [ this app was created with\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\n    ]\n</div>\n</body>\n</html>\n"},"env":{"NODE_ENV":"test","npm_package_description":"this zero-dependency package will provide a simple cli-tool to PUT / GET / DELETE github files","npm_package_homepage":"https://github.com/kaizhu256/node-github-crud","npm_package_name":"github-crud","npm_package_nameLib":"github_crud","npm_package_version":"2019.1.21"}}});